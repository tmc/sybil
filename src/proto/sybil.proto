// sybil.proto
syntax = "proto3";
package sybilpb;

import "google/protobuf/struct.proto";

// QueryType defines the types of query that can be performed.
enum QueryType {
  QUERY_TYPE_UNKNOWN = 0;
  TABLE = 1;
  TIME_SERIES = 2;
  DISTRIBUTION = 3;
  SAMPLES = 4;
}

// QueryOp is the type of operation to perform in the query.
enum QueryOp {
  QUERY_OP_UNKNOWN = 0;
  AVERAGE = 1;
  HISTOGRAM = 2;
}

// QueryFilterOp is the operation to apply to a column as part of a QueryFilter.
enum QueryFilterOp {
  QUERY_FILTER_OP_UNKNOWN = 0;
  RE = 1;
  NRE = 2;
  EQ = 3;
  NEQ = 4;
  GT = 5;
  LT = 6;
  IN = 7;
  NIN = 8;
}

// QueryFilter is a filter on a column.
message QueryFilter {
  string column = 1;
  QueryFilterOp op = 2;
  string value = 3;
}

// QueryRequest describes a query.
message QueryRequest {
  // Dataset is the name of the dataset.
  string dataset = 1;
  // The type of the query.
  QueryType type = 2;
  // Limit number of results.
  int64 limit = 3;
  // The integer fields to aggregate.
  repeated string ints = 4;
  // The string fields to aggregate.
  repeated string strs = 5;
  // The fields to group by.
  repeated string group_by = 6;
  repeated string distinct_group_by = 7;
  // Field to sort by.
  string sort_by = 8;
  // Todo: prune_by

  // Column to consider as the time column.
  string time_column = 9;
  // Time bucket size in seconds.
  int64 time_bucket = 10;

  // The column to interpret as the weight.
  string weight_column = 11;

  // The operation to run.
  QueryOp op = 12;

  // Filters on int columns.
  repeated QueryFilter int_filters = 13;
  // Filters on string columns.
  repeated QueryFilter str_filters = 14;
  // Filters on set columns.
  repeated QueryFilter set_filters = 15;

  // If type is DISTRIBUTION then this field controls hisogram options.
  HistogramOptions histogram_options = 16;

  // If true, the ingestion log is also read to produce results.
  bool read_ingestion_log = 17;

  // Todo: query cache control?
}

// HistogramType describes the type of histogram.
enum HistogramType {
  HISTOGRAM_TYPE_UNKNOWN = 0;
  NORMAL_HISTOGRAM = 1;
  LOG_HISTOGRAM = 2;
}

// HistogramOptions
message HistogramOptions {
  HistogramType type = 1;
  int64 bucket_size = 2;
}

// Histogram describes a distribution of values.
message Histogram {
  double mean = 1;
  repeated int64 percentiles = 5;
  repeated int64 buckets = 6;
  double std_deviation = 9;
}

// ResultMap
message ResultMap {
  map<string, QueryResult> values = 1;
}

// SetField
message SetField {
  repeated string values = 1;
}

message FieldValue {
  oneof value {
    double avg = 1;
    Histogram hist = 2;
    string str = 3;
  }
}

message QueryResult {
  map <string, FieldValue> values = 1;
  int64 count = 2;
  int64 samples = 3;
  int64 distinct = 4;
  // if a time-series query, the time bucket for the result.
  int64 time = 5;
}

// QueryResponse is the response type for a query.
message QueryResponse {
  repeated QueryResult results = 1;
  QueryResult cumulative = 2;
  repeated google.protobuf.Struct samples = 3;
}

// Table (aka dataset) is a collection of records in a sybil database.
message Table {
  // the name of the dataset.
  string name = 1;
  // the set of string column names.
  repeated string str_columns = 2;
  // the set of integer column names.
  repeated string int_columns = 3;
  // the set of set column names.
  repeated string set_columns = 4;
  // the approximate count of samples.
  int64 count = 5;
  // the approximate size in terms of disk utilization.
  int64 storage_size = 6;
  // the mean sample storage size.
  double average_object_size = 7;
}
